@use "../abstracts" as *;

.modal {
  $root: &;

  @include absolute(0, 0, 0, 0, fixed);
  z-index: 200;
  display: flex;
  justify-content: center;
  pointer-events: none;

  &--visible {
    #{$root}__mask {
      opacity: 1;
      pointer-events: initial;
    }

    #{$root}__container {
      opacity: 1;
      transform: scale(1);
      pointer-events: initial;
    }
  }

  &__mask {
    width: 100%;
    height: 100%;
    background-color: hsla(0, 0%, 0%, 0.4);
    opacity: 0;
    backdrop-filter: blur(6px);

    transition: opacity 0.3s ease;
  }

  &__container {
    position: absolute;
    width: 100%;
    height: 100%;
    max-width: 1024px;
    background-color: $white;
    opacity: 0;
    align-self: center;
    transform: scale(0);

    transition: opacity 0.3s ease, transform 0.3s ease;

    display: flex;
    flex-direction: column;

    overflow: hidden;

    @include breakpoint-tablet {
      width: 80%;
      height: 80%;
      border-radius: 0.5em;
    }
  }

  &__header {
    width: 100%;
    max-height: 50%;
    background-color: black;
    overflow: hidden;
    position: relative;
  }

  &__close {
    font-size: 0;
    position: absolute;
    top: 0;
    right: 0;
    background: white;
    border: none;
    cursor: pointer;
    width: 3rem;
    height: 3rem;
    z-index: 1;
    border-radius: 0 0 0 50%;
    padding: 1.7rem;
    filter: drop-shadow(0px 0px 2px black);

    &::before,
    &::after {
      content: "";
      position: absolute;
      top: 0.1rem;
      background-color: $black;
      height: 3rem;
      width: 0.2rem;
      transition: background-color 0.1s ease;
    }
    &::before {
      transform: rotateZ(45deg);
    }
    &::after {
      transform: rotateZ(-45deg);
    }

    &:hover {
      &::before,
      &::after {
        background-color: $primary;
      }
    }
  }

  &__play {
    @include absolute;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;

    &--hidden {
      display: none;
    }

    &:hover {
      svg {
        transform: scale(1.1);
        path {
          fill: $primary;
        }
      }
    }

    svg {
      top: calc(50% - 2.5rem);
      left: calc(50% - 2.5rem);
      height: 5rem;
      width: 5rem;

      filter: drop-shadow(0 0 0.2rem rgba(0, 0, 0, 0.7));

      transition: transform 0.2s ease;

      pointer-events: none;

      path {
        transition: fill 0.2s ease;
        fill: $white;
      }
    }
  }

  &__image {
    height: 100%;

    &--hidden {
      display: none;
    }

    img {
      width: 100%;
      max-width: 100%;
    }
  }

  &__video {
    display: none;
    height: 100%;

    &--visible {
      display: block;
    }

    video {
      display: block;
      height: 100%;
      margin: 0 auto;
      width: 100%;
    }
  }

  &__title-container {
    display: flex;
    justify-content: space-between;
  }

  &__title {
    margin: 0;
    padding: 0 0.5rem;
  }

  &__links {
    display: flex;
  }

  &__link {
    padding: 0 0.5rem;

    svg {
      height: 2rem;
      width: 2rem;

      path,
      rect {
        fill: $black;
        transition: fill 0.2s ease;
      }

      &:hover {
        path {
          fill: $primary;
        }
        rect {
          fill: $primary;
        }
      }
    }
  }

  &__technologies {
    display: flex;
    flex-wrap: wrap;
    margin: 0;
    padding: 0;
    background-color: $grey;
  }

  &__technology {
    padding: 0 1rem;
  }

  &__description {
    padding: 0.5rem;
    margin: 0;
    overflow-y: auto;

    span {
      font-weight: bold;
      text-decoration: underline;
      text-decoration-color: $primary;
      text-decoration-thickness: 0.2rem;
    }
  }
}
